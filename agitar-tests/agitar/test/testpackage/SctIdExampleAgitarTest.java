/**
 * Generated by Agitar build: AgitarOne Version 6.1.0.${build.number} (Build date: Jan 22, 2015) [6.1.0.${build.number}]
 * JDK Version: 1.8.0_11
 *
 * Generated on Jun 1, 2015 4:21:36 PM
 * Time to generate: 00:13.061 seconds
 *
 *
 * agitar.src.md5=testpackage.SctIdExample:4d37d4bd795f55d344e653e4f48d3097
 *
 */

package testpackage;

import com.agitar.lib.junit.AgitarTestCase;

public class SctIdExampleAgitarTest extends AgitarTestCase {
    
    public Class getTargetClass()  {
        return SctIdExample.class;
    }
    
    public void testConstructor() throws Throwable {
        new SctIdExample();
        assertTrue("Test call resulted in expected outcome", true);
    }
    
    public void testIsValidSCTID() throws Throwable {
        boolean result = SctIdExample.isValidSCTID(100);
        assertFalse("result", result);
    }
    
    public void testIsValidSctId() throws Throwable {
        boolean result = SctIdExample.isValidSctId(100000L);
        assertFalse("result", result);
    }
    
    public void testIsValidSctId1() throws Throwable {
        boolean result = SctIdExample.isValidSctId(1000000000000000000L);
        assertFalse("result", result);
    }
    
    public void testIsValidSctId2() throws Throwable {
        boolean result = SctIdExample.isValidSctId("");
        assertFalse("result", result);
    }
    
    public void testIsValidSctId3() throws Throwable {
        boolean result = SctIdExample.isValidSctId("testSctIdExampleIdAsString");
        assertFalse("result", result);
    }
    
    public void testIsValidSctId4() throws Throwable {
        boolean result = SctIdExample.isValidSctId("1000000000000");
        assertFalse("result", result);
    }
    
    public void testIsValidSctId5() throws Throwable {
        boolean result = SctIdExample.isValidSctId(999999999999999998L);
        assertFalse("result", result);
    }
    
    public void testIsValidSctId6() throws Throwable {
        boolean result = SctIdExample.isValidSctId(100001L);
        assertFalse("result", result);
    }
    
    public void testIsValidSctId7() throws Throwable {
        boolean result = SctIdExample.isValidSctId(999999999999999999L);
        assertFalse("result", result);
    }
    
    public void testIsValidSctId8() throws Throwable {
        boolean result = SctIdExample.isValidSctId(99999L);
        assertFalse("result", result);
    }
    
    public void testIsValidSctId9() throws Throwable {
        boolean result = SctIdExample.isValidSctId("943641770081");
        assertFalse("result", result);
    }
    
    public void testIsValidSctId10() throws Throwable {
        boolean result = SctIdExample.isValidSctId("781367946513");
        assertTrue("result", result);
    }
    
    public void testIsValidSctId11() throws Throwable {
        boolean result = SctIdExample.isValidSctId("100000");
        assertFalse("result", result);
    }
    
    public void testIsValidSctId12() throws Throwable {
        boolean result = SctIdExample.isValidSctId("99999");
        assertFalse("result", result);
    }
    
    public void testTYPEGetDigits() throws Throwable {
        String result = SctIdExample.TYPE.RELATIONSHIP.getDigits();
        assertEquals("result", "12", result);
    }
    
    public void testTYPEValueOf() throws Throwable {
        SctIdExample.TYPE result = SctIdExample.TYPE.valueOf("CONCEPT");
        assertEquals("result", SctIdExample.TYPE.CONCEPT, result);
    }
    
    public void testTYPEValues() throws Throwable {
        SctIdExample.TYPE[] result = SctIdExample.TYPE.values();
        assertEquals("result.length", 4, result.length);
        assertEquals("result[0]", SctIdExample.TYPE.CONCEPT, result[0]);
    }
    
    public void testTYPEValueOfThrowsIllegalArgumentException() throws Throwable {
        try {
            SctIdExample.TYPE.valueOf("testTYPEParam1");
            fail("Expected IllegalArgumentException to be thrown");
        } catch (IllegalArgumentException ex) {
            assertEquals("ex.getMessage()", "No enum constant testpackage.SctIdExample.TYPE.testTYPEParam1", ex.getMessage());
            assertThrownBy(Enum.class, ex);
        }
    }
    
    public void testTYPEValueOfThrowsNullPointerException() throws Throwable {
        try {
            SctIdExample.TYPE.valueOf(null);
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertEquals("ex.getMessage()", "Name is null", ex.getMessage());
            assertThrownBy(Enum.class, ex);
        }
    }
}

